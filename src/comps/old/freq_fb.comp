HAL_COMP(freq_fb);

HAL_PIN(vel) = 0.0;
HAL_PIN(a) = 0.0;
HAL_PIN(res) = 6.0;
HAL_PIN(t) = 0.025;
HAL_PIN(lp) = 0.5;

MEM(uint32_t lastpos) = 0;
MEM(float time) = 0.0;
MEM(float vel_lp) = 0.0;

RT_INIT(
  GPIO_InitTypeDef GPIO_InitStructure;
 
  // enable clocks
  RCC_APB1PeriphClockCmd(FB0_ENC_TIM_RCC, ENABLE);

  // pin mode: af
  GPIO_InitStructure.GPIO_Pin = FB0_A_PIN;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  GPIO_Init(FB0_A_PORT, &GPIO_InitStructure);

  // pin af -> tim
  GPIO_PinAFConfig(FB0_A_PORT, FB0_A_PIN_SOURCE, FB0_ENC_TIM_AF);

  // enc res / turn
  TIM_SetAutoreload(FB0_ENC_TIM, 5000-1);

  // quad
  TIM_Cmd(FB0_ENC_TIM, DISABLE);
  GPIO_InitStructure.GPIO_Pin = FB0_A_PIN;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  GPIO_Init(FB0_A_PORT, &GPIO_InitStructure);
  TIM_EncoderInterfaceConfig(FB0_ENC_TIM, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising);
  
  TIM_ETRClockMode1Config(FB0_ENC_TIM,TIM_ExtTRGPSC_OFF,TIM_ExtTRGPolarity_NonInverted,0x00);
  
  TIM_TIxExternalClockConfig(FB0_ENC_TIM,TIM_TIxExternalCLK1Source_TI1,TIM_ICPolarity_Rising,0x00);
  
  TIM_Cmd(FB0_ENC_TIM, ENABLE);
);

RT_DEINIT(
   TIM_Cmd(FB0_ENC_TIM, DISABLE);
   TIM_DeInit(FB0_ENC_TIM);
   RCC_APB2PeriphClockCmd(FB0_ENC_TIM_RCC, DISABLE);
   GPIO_InitStructure.GPIO_Pin = FB0_A_PIN;
   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   GPIO_Init(FB0_A_PORT, &GPIO_InitStructure);
);

RT(
   float lp = PIN(lp);
   uint32_t tim = TIM_GetCounter(FB0_ENC_TIM);
   if(time > PIN(t)){
      float vel = ((tim - lastpos + 5000)%5000)/PIN(res)/time;
      vel_lp = vel * lp + vel_lp * (1.0 - lp);
      PIN(vel) = vel_lp;
      time = 0;
      lastpos = tim;
   }
   time += period;

  if(GPIO_ReadInputDataBit(FB0_A_PORT,FB0_A_PIN)){//TODO: setup pin
     PIN(a) = 0.0;
  }else{
     PIN(a) = 1.0;
  }
  
);

ENDCOMP;
